// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_math_FlxBasePoint
#include <flixel/math/FlxBasePoint.h>
#endif
#ifndef INCLUDED_flixel_system_scaleModes_BaseScaleMode
#include <flixel/system/scaleModes/BaseScaleMode.h>
#endif
#ifndef INCLUDED_flixel_system_scaleModes_PixelPerfectScaleMode
#include <flixel/system/scaleModes/PixelPerfectScaleMode.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_653052746a4ee509_16_new,"flixel.system.scaleModes.PixelPerfectScaleMode","new",0xef519ddd,"flixel.system.scaleModes.PixelPerfectScaleMode.new","flixel/system/scaleModes/PixelPerfectScaleMode.hx",16,0xeb6fe914)
HX_LOCAL_STACK_FRAME(_hx_pos_653052746a4ee509_19_updateGameSize,"flixel.system.scaleModes.PixelPerfectScaleMode","updateGameSize",0x7b076e9f,"flixel.system.scaleModes.PixelPerfectScaleMode.updateGameSize","flixel/system/scaleModes/PixelPerfectScaleMode.hx",19,0xeb6fe914)
namespace flixel{
namespace _hx_system{
namespace scaleModes{

void PixelPerfectScaleMode_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_653052746a4ee509_16_new)
HXDLIN(  16)		super::__construct();
            	}

Dynamic PixelPerfectScaleMode_obj::__CreateEmpty() { return new PixelPerfectScaleMode_obj; }

void *PixelPerfectScaleMode_obj::_hx_vtable = 0;

Dynamic PixelPerfectScaleMode_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< PixelPerfectScaleMode_obj > _hx_result = new PixelPerfectScaleMode_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool PixelPerfectScaleMode_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1ab2e755) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x1ab2e755;
	} else {
		return inClassId==(int)0x5671ae2b;
	}
}

void PixelPerfectScaleMode_obj::updateGameSize(int Width,int Height){
            	HX_STACKFRAME(&_hx_pos_653052746a4ee509_19_updateGameSize)
HXLINE(  20)		Float scaleFactorX = (( (Float)(Width) ) / ( (Float)(::flixel::FlxG_obj::width) ));
HXLINE(  21)		Float scaleFactorY = (( (Float)(Height) ) / ( (Float)(::flixel::FlxG_obj::height) ));
HXLINE(  22)		int scaleFactor = ::Math_obj::floor(::Math_obj::min(scaleFactorX,scaleFactorY));
HXLINE(  25)		if ((scaleFactor < 1)) {
HXLINE(  26)			scaleFactor = 1;
            		}
HXLINE(  28)		this->gameSize->set_x(( (Float)((::flixel::FlxG_obj::width * scaleFactor)) ));
HXLINE(  29)		this->gameSize->set_y(( (Float)((::flixel::FlxG_obj::height * scaleFactor)) ));
            	}



::hx::ObjectPtr< PixelPerfectScaleMode_obj > PixelPerfectScaleMode_obj::__new() {
	::hx::ObjectPtr< PixelPerfectScaleMode_obj > __this = new PixelPerfectScaleMode_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< PixelPerfectScaleMode_obj > PixelPerfectScaleMode_obj::__alloc(::hx::Ctx *_hx_ctx) {
	PixelPerfectScaleMode_obj *__this = (PixelPerfectScaleMode_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(PixelPerfectScaleMode_obj), true, "flixel.system.scaleModes.PixelPerfectScaleMode"));
	*(void **)__this = PixelPerfectScaleMode_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

PixelPerfectScaleMode_obj::PixelPerfectScaleMode_obj()
{
}

::hx::Val PixelPerfectScaleMode_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"updateGameSize") ) { return ::hx::Val( updateGameSize_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *PixelPerfectScaleMode_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *PixelPerfectScaleMode_obj_sStaticStorageInfo = 0;
#endif

static ::String PixelPerfectScaleMode_obj_sMemberFields[] = {
	HX_("updateGameSize",fc,94,a3,ed),
	::String(null()) };

::hx::Class PixelPerfectScaleMode_obj::__mClass;

void PixelPerfectScaleMode_obj::__register()
{
	PixelPerfectScaleMode_obj _hx_dummy;
	PixelPerfectScaleMode_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.system.scaleModes.PixelPerfectScaleMode",6b,6b,a4,32);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(PixelPerfectScaleMode_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< PixelPerfectScaleMode_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PixelPerfectScaleMode_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PixelPerfectScaleMode_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace system
} // end namespace scaleModes
